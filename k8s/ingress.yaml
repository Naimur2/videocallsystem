apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mediasoup-ingress
  namespace: mediasoup
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "mediasoup-ip"
    networking.gke.io/managed-certificates: "mediasoup-ssl-cert"
    kubernetes.io/ingress.class: "gce"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location /socket.io/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
      }
spec:
  rules:
  - host: yourdomain.com  # Replace with your domain
    http:
      paths:
      - path: /api/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: mediasoup-backend-service
            port:
              number: 3201
      - path: /socket.io/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: mediasoup-backend-service
            port:
              number: 3201
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: mediasoup-frontend-service
            port:
              number: 3000

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: mediasoup-ssl-cert
  namespace: mediasoup
spec:
  domains:
    - yourdomain.com  # Replace with your domain