name: Deploy Multi-Service Application

on:
  workflow_run:
    workflows: ["Build and Push Multi-Service Images"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/videocallsystem

jobs:
  deploy:
    runs-on: self-hosted
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Login to GitHub Container Registry
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: Create environment file
      run: |
        cat > .env << 'EOF'
        ${{ secrets.ENV_VARS }}
        GITHUB_REPOSITORY=${{ github.repository }}
        EOF

    - name: Pull all service images
      run: |
        echo "🔄 Pulling all pre-built service images..."
        
        # Pull base images first (from Docker Hub)
        {
          sudo docker pull redis:7-alpine &
          sudo docker pull postgres:15-alpine &
          sudo docker pull caddy:2.7-alpine &
          wait
        }
        
        # Pull our custom service images from GHCR
        {
          sudo docker pull ghcr.io/naimur2/videocallsystem-frontend:latest &
          sudo docker pull ghcr.io/naimur2/videocallsystem-backend:latest &
          sudo docker pull ghcr.io/naimur2/videocallsystem-coturn:latest &
          wait
        }
        
        echo "✅ All images pulled successfully"
        sudo docker images | grep -E "(ghcr.io/naimur2/videocallsystem|redis|postgres|caddy)"
    
    - name: Deploy with multi-service compose
      run: |
        echo "🛑 Stopping existing services..."
        sudo docker compose down --remove-orphans || true
        
        echo "🔍 Validating compose configuration..."
        sudo docker compose -f docker-compose.yml config --quiet
        
        echo "🧹 Cleaning up dangling images and containers..."
        sudo docker system prune -f || true
        
        echo "📋 Available images:"
        sudo docker images | head -10
        
        echo "🚀 Starting all services with pre-built images..."
        sudo docker compose -f docker-compose.yml up -d \
          --pull never \
          --force-recreate \
          --wait
        
        echo "✅ All services are healthy and ready!"
    
    - name: Verify deployment
      run: |
        echo "📊 Service Status:"
        sudo docker compose -f docker-compose.yml ps
        
        echo ""
        echo "🔍 Health Checks:"
        sudo docker compose -f docker-compose.yml exec -T frontend curl -f http://localhost:3000/api/health || echo "Frontend starting..."
        sudo docker compose -f docker-compose.yml exec -T backend curl -f http://localhost:8080/api/health || echo "Backend starting..."
        
        echo ""
        echo "📋 Recent Logs:"
        sudo docker compose -f docker-compose.yml logs --tail=5 frontend backend
        
        echo ""
        echo "🎯 Deployment Summary:"
        echo "- Frontend: ghcr.io/naimur2/videocallsystem-frontend:latest"
        echo "- Backend: ghcr.io/naimur2/videocallsystem-backend:latest" 
        echo "- CoTURN: ghcr.io/naimur2/videocallsystem-coturn:latest"
        echo "- Database: postgres:15-alpine"
        echo "- Cache: redis:7-alpine"
        echo "- Proxy: caddy:2.7-alpine"

    - name: Legacy app deployment (optional)
      if: github.event.inputs.deploy_legacy == 'true'
      run: |
        echo "🔄 Deploying legacy app as well..."
        sudo docker compose --profile legacy up -d legacy-app
        echo "✅ Legacy app deployed"