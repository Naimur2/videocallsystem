# Multi-stage build for production
FROM node:20-alpine AS base

# Install system dependencies for MediaSoup
RUN apk add --no-cache \
    make \
    gcc \
    g++ \
    python3 \
    py3-pip \
    linux-headers \
    curl \
    git

WORKDIR /app

# Install dependencies
FROM base AS deps
COPY package.json ./
# Clean install without lock file conflicts
RUN npm install --production --no-package-lock && \
    npm cache clean --force

# Build stage
FROM base AS builder
COPY package.json ./
# Install all dependencies including dev dependencies
RUN npm install --no-package-lock
COPY . .
# Build the TypeScript code
RUN npm run build || (echo "Build failed, trying alternative build..." && npx tsc)

# Production image
FROM node:20-alpine AS runner

# Install runtime dependencies
RUN apk add --no-cache curl

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S backend -u 1001

# Install production system dependencies
RUN apk add --no-cache \
    curl \
    dumb-init

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 mediasoup

# Copy built application and dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./package.json

# Create necessary directories
RUN mkdir -p /app/logs && \
    chown -R mediasoup:nodejs /app

USER mediasoup

EXPOSE 3001
EXPOSE 10000-10100/udp
EXPOSE 10000-10100/tcp

ENV NODE_ENV=production
ENV PORT=3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3001/api/v1/health || exit 1

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]
